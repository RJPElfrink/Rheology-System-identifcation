%clear all; close all


%double=load('arrays.mat');

data=load('Matlab_multisine.mat');

method.order        =   2; %order of the local polynomial approximation (default 2) 
method.dof          =   1; %degrees of freedom of the (co-)variance estimates = equivalent number of 
%                                               independent experiments - 1 (default ny) 
method.transient    = 	1;%determines the estimation of the transient term (optional; default 1)  
%                                                   1: transient term is estimated 
%                                                   0: no transient term is estimated 
                                   
[CZ, Z, freq, G, CvecG, dof, CL] = FastLocalPolyAnal(data, method);

% FRF and its variance
G = squeeze(G).';
varGn = squeeze(CvecG.n).';              % noise variance
varGNL = squeeze(CvecG.NL).';            % total variance (noise + NL distortions)

%save('LPM_matlab.mat', 'G_LPM');


% estimated BLA, its noise and total variances
figure(2)
semilogx(freq, db(G), 'k', freq, db(varGn)/2, 'g', freq, db(varGNL)/2, 'r')
xlabel('Frequency (Hz)')
ylabel('{\itG}_{BLA} (dB)')
title('Estimated BLA and its variances')
legend('{\itG}_{BLA}', 'noise variance', 'total variance', 'Location', 'EastOutside');
zoom on
shg

